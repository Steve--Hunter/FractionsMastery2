<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<room>
  <caption></caption>
  <width>1024</width>
  <height>768</height>
  <vsnap>32</vsnap>
  <hsnap>32</hsnap>
  <isometric>0</isometric>
  <speed>30</speed>
  <persistent>0</persistent>
  <colour>12632256</colour>
  <showcolour>-1</showcolour>
  <code></code>
  <enableViews>0</enableViews>
  <clearViewBackground>-1</clearViewBackground>
  <makerSettings>
    <isSet>0</isSet>
    <w>0</w>
    <h>0</h>
    <showGrid>0</showGrid>
    <showObjects>0</showObjects>
    <showTiles>0</showTiles>
    <showBackgrounds>0</showBackgrounds>
    <showForegrounds>0</showForegrounds>
    <showViews>0</showViews>
    <deleteUnderlyingObj>0</deleteUnderlyingObj>
    <deleteUnderlyingTiles>0</deleteUnderlyingTiles>
    <page>0</page>
    <xoffset>0</xoffset>
    <yoffset>0</yoffset>
  </makerSettings>
  <backgrounds>
    <background visible="-1" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
    <background visible="0" foreground="0" name="" x="0" y="0" htiled="-1" vtiled="-1" hspeed="0" vspeed="0" stretch="0"/>
  </backgrounds>
  <views>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="640" hview="480" xport="0" yport="0" wport="640" hport="480" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="640" hview="480" xport="0" yport="0" wport="640" hport="480" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="640" hview="480" xport="0" yport="0" wport="640" hport="480" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="640" hview="480" xport="0" yport="0" wport="640" hport="480" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="640" hview="480" xport="0" yport="0" wport="640" hport="480" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="640" hview="480" xport="0" yport="0" wport="640" hport="480" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="640" hview="480" xport="0" yport="0" wport="640" hport="480" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
    <view visible="0" objName="&lt;undefined&gt;" xview="0" yview="0" wview="640" hview="480" xport="0" yport="0" wport="640" hport="480" hborder="32" vborder="32" hspeed="-1" vspeed="-1"/>
  </views>
  <instances>
    <instance objName="obSplashScreen" x="0" y="0" name="inst_3428008C" locked="0" code="// Show splash screen - trick to extend time for Apple splash is to show it as first part of game&#xA;// First room&#xA;&#xA;// Put all the run-once per game code here; any re-reads put in room home&#xA;&#xA;&#xA;    &#xA;//Initial setup for Fractions Mastery app&#xA;&#xA;//Global variables&#xA;&#xA;globalvar CurrentLevel;&#xA;globalvar CurrentQuestion;&#xA;globalvar CurrentSubQuestion;&#xA;globalvar RoomName;&#xA;globalvar HelpVisible;&#xA;globalvar SkillTesterCorrect;&#xA;globalvar ProgressVisible&#xA;&#xA;var i;&#xA;&#xA;global.CurrentLevel=0;&#xA;global.CurrentQuestion=0;&#xA;global.CurrentSubQuestion=0;&#xA;global.RoomName=&quot;&quot;;&#xA;global.HelpVisible=false;&#xA;global.SkillTesterCorrect=0;&#xA;global.ProgressVisible=0;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;// Scratch board variables&#xA;globalvar old_mouse_x;&#xA;globalvar old_mouse_y;&#xA;globalvar mouse_check;&#xA;globalvar suScratch;&#xA;&#xA;global.old_mouse_x=mouse_x-105;&#xA;global.old_mouse_y=mouse_y-30;&#xA;global.mouse_check=0;&#xA;&#xA;// timers - TimeLeft;           when 0 reached, answer is checked, (seconds);&#xA;//          ThinkingTimeDelay;  before a button is moved on a question, thinking time for student (seconds)&#xA;//          CheckAnswerDelay;   time to wait after last button has been moved (answer submitted) (seconds)&#xA;globalvar TimeLeft; &#xA;globalvar ThinkingTimeDelay; ThinkingTimeDelay=240; // No digit moved, exit level after this period NB counting digits to call check answer&#xA;globalvar CheckAnswerDelay; CheckAnswerDelay=240; // From last digit moved, wait this long before exit level&#xA;&#xA;&#xA;CurrentLevel=0; // start at Level 0 (Home Page)&#xA;// Reset given answers (strings)&#xA;globalvar Numerator;&#xA;globalvar Denominator;&#xA;globalvar WholeNumber;&#xA;global.Numerator=&quot;000&quot;;&#xA;global.Denominator=&quot;000&quot;;&#xA;global.WholeNumber=&quot;000&quot;;&#xA;&#xA;globalvar ButtonInMotion;&#xA;ButtonInMotion=0; // No button moving&#xA;&#xA;globalvar Debug; &#xA;global.Debug=0; // 1 (terse),2 (verbose, and every Q is asked) - debug mode on, 0=FALSE, debug mode off&#xA;&#xA;globalvar PopupDebug;&#xA;PopupDebug=0; // 0=off, 1=show pop-ups on device (only way to get to variables/script entry on iOS&#xA;&#xA;// Initialise array to hold the relationship between provided answer and expected answer&#xA;// Count from 1&#xA;&#xA;globalvar QuestionImage; // Holds image_index - number from 0&#xA;for (i=0; i&lt;=400; i+=1)&#xA;    {&#xA;    QuestionImage[i]=0; &#xA;    }&#xA;&#xA;&#xA;// Not all Levels have same number of Questions&#xA;// Level    No. Qs&#xA;//  1       5&#xA;//  2       5&#xA;//  3       5&#xA;//  4       10&#xA;//  5       10&#xA;//  6       5&#xA;//  7       5&#xA;//  8       10&#xA;//  9       10&#xA;//  10      5&#xA;//  11&#xA;// Store number of questions in each level in an array&#xA;globalvar QperLevel;&#xA;global.QperLevel[1]=5;&#xA;global.QperLevel[2]=5;&#xA;global.QperLevel[3]=5;&#xA;global.QperLevel[4]=10;&#xA;global.QperLevel[5]=10;&#xA;global.QperLevel[6]=5;&#xA;global.QperLevel[7]=5;&#xA;global.QperLevel[8]=10;&#xA;global.QperLevel[9]=10;&#xA;global.QperLevel[10]=5;&#xA;global.QperLevel[11]=30;&#xA;&#xA;globalvar Answer; // holds expected Answer:&#xA;// Expected answer in format: AAABBBCCC, where&#xA;// AAA=Whole number&#xA;// BBB=Numerator&#xA;// CCC=Denominator  &#xA;&#xA;for (i=0; i&lt;=400; i+=1)&#xA;    {&#xA;    Answer[i]=&quot;000000000&quot;;&#xA;    }&#xA;&#xA;&#xA;&#xA;&#xA;globalvar QuestionType; // holds:&#xA;// 0=image_index (real)&#xA;// 1=expected answer (string - use string() to convert)&#xA;// 2=question type (real; 0=not shown, 1=multiple choice, 2=drop a button)&#xA;&#xA;&#xA;for (i=0; i&lt;=400; i+=1)&#xA;    {&#xA;    QuestionType[i]=2;&#xA;    }&#xA;&#xA;&#xA;globalvar DropZoneImage; // holds the drop zone image to display in sprite&#xA;for (i=0; i&lt;=400; i+=1)&#xA;    {&#xA;    DropZoneImage[i]=0;&#xA;    }&#xA;&#xA;&#xA;&#xA;globalvar SubQuestionType; // sub-type, e.g. drop button, but N only, or N+D&#xA;/* What elements to expect in answer (e.g. W/N/D), used  lookup the coords for up to 3 bounding boxes - for QT=2 only&#xA;        1=N&#xA;        2=D&#xA;        3=W&#xA;        4=N + D&#xA;        5=W + N + D */&#xA;for (i=0; i&lt;=400; i+=1)&#xA;    {&#xA;    SubQuestionType[i]=0;&#xA;    }&#xA;&#xA;&#xA;globalvar HelpPopup; // index to which image a Q,SQ should relate to&#xA;for (i=0; i&lt;=400; i+=1)&#xA;    {&#xA;    HelpPopup[i]=0;&#xA;    }&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;// Init array to hold x-coord of dropped buttons, so can determine place value&#xA;// Array holds: WWNNNDDD, for Whole number, Numerator, Denominator&#xA; &#xA;&#xA;// Read progress from .ini file&#xA;globalvar LevelComplete;&#xA;ini_open(&quot;savedata.ini&quot;); // if doesn't exist, will be created&#xA;&#xA;ini_write_real('Locked','Level1',1); // Level 1 needs to be unlocked to start the app (1=unlocked, 0=locked)&#xA;&#xA;// Read if level is locked, if no ini file, returns locked by default&#xA;global.LevelComplete[1]=ini_read_real('Locked','Level1',0); &#xA;global.LevelComplete[2]=ini_read_real('Locked','Level2',0); &#xA;global.LevelComplete[3]=ini_read_real('Locked','Level3',0); &#xA;global.LevelComplete[4]=ini_read_real('Locked','Level4',0); &#xA;global.LevelComplete[5]=ini_read_real('Locked','Level5',0); &#xA;global.LevelComplete[6]=ini_read_real('Locked','Level6',0); &#xA;global.LevelComplete[7]=ini_read_real('Locked','Level7',0); &#xA;global.LevelComplete[8]=ini_read_real('Locked','Level8',0); &#xA;global.LevelComplete[9]=ini_read_real('Locked','Level9',0); &#xA;global.LevelComplete[10]=ini_read_real('Locked','Level10',0); &#xA;global.LevelComplete[11]=ini_read_real('Locked','Level11',0); &#xA;&#xA;//  make only Level 1 and 9 unlocked (permanently) for website preview&#xA;// if global.Debug // unlock all levels if Debugging&#xA;/*    {&#xA;    for (i=2; i&lt;=12; i+=1)&#xA;        {&#xA;           LevelComplete[i]=0; // set all to locked&#xA;        }&#xA;    }&#xA;*/&#xA;// make only Level 1 and 9 unlocked (permanently) for website preview&#xA;//global.LevelComplete[9]=1; // Unlock Level 9&#xA;&#xA;ini_close(); // Save back values&#xA;&#xA;    &#xA;// Set-up array to hold location of bounding boxes for QuestionType=2, up to 3 drop zones (W,N,D)&#xA;// contains [index,bounding box corners]&#xA;// where:&#xA;//   index=looked up from Answers text file 'SubQuestionType'; guess 11 max?&#xA;//   bounding box corners=x1,y1,x2,y2 [i,0-11 (0-3 x 3 (W0-3, N4-7, D8-11))], 0=not set (array default)&#xA;//    &#xA;globalvar BoundingBox; // 10=no. bounding box types, 11=3 groups of (x1,y1,x2,y2) coords&#xA;&#xA;var j;&#xA;// Initialise array&#xA;for (i=0; i&lt;=60; i+=1)&#xA;    {&#xA;    BoundingBox[i]=0; &#xA;    }&#xA;&#xA;&#xA;// set values&#xA;// Note that the Dropbox used may be waiting for an numerator or a denominator (like L1,Q1,2)&#xA;// Bounding Box[1, ]:Numerator only SubQuestionType&#xA;// index = (Questiontype-1)*12 + W0-3, N4-7, D8-11&#xA;BoundingBox[4]=767;&#xA;BoundingBox[5]=295;&#xA;BoundingBox[6]=853;&#xA;BoundingBox[7]=438;&#xA;&#xA;&#xA;// Bounding Box[2, ]:Denominator only SubQuestionType&#xA;BoundingBox[20]=767;&#xA;BoundingBox[21]=295;&#xA;BoundingBox[22]=853;&#xA;BoundingBox[23]=438;&#xA;&#xA;&#xA;// BoundingBox[4, ] Numerator and Denominator question SubQuestionType&#xA;// Numerator&#xA;BoundingBox[40]=741;&#xA;BoundingBox[41]=255;&#xA;BoundingBox[42]=852;&#xA;BoundingBox[43]=344;&#xA;// Denominator&#xA;BoundingBox[44]=742;&#xA;BoundingBox[45]=400;&#xA;BoundingBox[46]=866;&#xA;BoundingBox[47]=494;&#xA;&#xA;&#xA;// BoundingBox[5, ] Whole Number, Numerator and Denominator question SubQuestionType&#xA;// Whole Number&#xA;BoundingBox[48]=600;&#xA;BoundingBox[49]=298;&#xA;BoundingBox[50]=673;&#xA;BoundingBox[51]=417;&#xA;// Numerator&#xA;BoundingBox[52]=742;&#xA;BoundingBox[53]=255;&#xA;BoundingBox[54]=855;&#xA;BoundingBox[55]=347;&#xA;// Denominator&#xA;BoundingBox[56]=744;&#xA;BoundingBox[57]=405;&#xA;BoundingBox[58]=867;&#xA;BoundingBox[59]=495;&#xA;&#xA;// Bounding Box[2, ]:Whole number only SubQuestionType&#xA;BoundingBox[24]=767;&#xA;BoundingBox[25]=295;&#xA;BoundingBox[26]=853;&#xA;BoundingBox[27]=438;" scaleX="1" scaleY="1" colour="4294967295" rotation="0"/>
  </instances>
  <tiles/>
  <PhysicsWorld>0</PhysicsWorld>
  <PhysicsWorldTop>0</PhysicsWorldTop>
  <PhysicsWorldLeft>0</PhysicsWorldLeft>
  <PhysicsWorldRight>640</PhysicsWorldRight>
  <PhysicsWorldBottom>480</PhysicsWorldBottom>
  <PhysicsWorldGravityX>0</PhysicsWorldGravityX>
  <PhysicsWorldGravityY>10</PhysicsWorldGravityY>
  <PhysicsWorldPixToMeters>0.100000001490116</PhysicsWorldPixToMeters>
</room>
